name: Auto Format Changed Files

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  format:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Fetch full history to avoid "bad object"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install formatters
        run: |
          npm install -g prettier
          pip install black

      - name: Find and format changed files
        run: |
          echo "üîç Checking changed files..."

          # Handle first commit
          if [ -n "${{ github.event.before }}" ]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          else
            CHANGED_FILES=$(git ls-files)
          fi

          if [ -z "$CHANGED_FILES" ]; then
            echo "‚úÖ No changed files."
            exit 0
          fi

          echo "$CHANGED_FILES" | while read file; do
            if [[ "$file" == *.py ]]; then
              echo "üêç Formatting Python: $file"
              black "$file"
            elif [[ "$file" == *.* ]]; then
              echo "üßπ Formatting other: $file"
              prettier --write "$file" || true
            fi
          done

      - name: Commit and push changes (if any)
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "Format Bot"
            git config user.email "format-bot@github.com"
            git add .
            git commit -m "Auto format changed files (Prettier + Black)"
            git push
          else
            echo "‚úÖ Code already formatted"
          fi
